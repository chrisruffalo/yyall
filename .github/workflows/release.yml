name: Build and Release Artifacts
on:
  push:
    branches:
      - release-*
    tags:
      - release-*
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          java-version: '8'
          distribution: 'adopt'
      - name: Build with Maven
        run: mvn --batch-mode --update-snapshots package

      - name: Capture branch info (prerelease/branch)
        if: contains(github.ref, 'refs/heads/')
        run: |
          echo "PRERELEASE=true" >> $GITHUB_ENV
          echo "TAG_PREFIX=prerelease-" >> $GITHUB_ENV

      - name: Capture branch info (release/tag)
        if: "!contains(github.ref, 'refs/heads/')"
        run: |
          echo "PRERELEASE=false" >> $GITHUB_ENV
          echo "TAG_PREFIX=release-" >> $GITHUB_ENV

      - name: Capture metadata
        run: |
          echo "POM_VER=$(mvn org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV
          echo "SHORT_BRANCH=$(echo \"${GITHUB_REF##*/}\")" >> $GITHUB_ENV

      - name: Delete release/tag if it exists
        uses: dev-drprasad/delete-tag-and-release@v0.2.0
        with:
          delete_release: true
          tag_name: ${{ env.TAG_PREFIX }}${{ env.POM_VER }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Github Release
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          name: ${{ env.SHORT_BRANCH }}
          tag: ${{ env.TAG_PREFIX }}${{ env.POM_VER }}
          prerelease: ${{ env.PRERELEASE }}
          token: ${{ secrets.GITHUB_TOKEN }}
          commit: ${{ github.sha }}
          artifacts: "target/yyall-*.jar"
          replacesArtifacts: true

      - name: Delete Github Package Snapshot
        if: contains(github.ref, 'refs/heads/')
        uses: WyriHaximus/github-action-delete-package@master
        with:
          packageVersionId: ${{ env.POM_VER }}-SNAPSHOT
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Delete Github Package Release
        if: "!contains(github.ref, 'refs/heads/')"
        uses: WyriHaximus/github-action-delete-package@master
        with:
          packageVersionId: ${{ env.POM_VER }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish Github Package Snapshot
        if: contains(github.ref, 'refs/heads/')
        run: mvn -Pgithub-distribution -Drevision=${{ env.POM_VER }}-SNAPSHOT --batch-mode clean deploy
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish Github Package Release
        if: "!contains(github.ref, 'refs/heads/')"
        run: mvn -Pgithub-distribution --batch-mode deploy
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Java for publishing to Maven Central Repository
        uses: actions/setup-java@v2
        with:
          java-version: '8'
          distribution: 'adopt'
          server-id: ossrh
          server-username: ${{ secrets.OSSRH_USERNAME }}
          server-password: ${{ secrets.OSSRH_TOKEN }}

      - name: Install GPG Secret Key
        run: |
          cat <(echo -e "${{ secrets.OSSRH_GPG_SECRET_KEY }}") | gpg --batch --import
          gpg --list-secret-keys --keyid-format LONG

      - name: Publish OSSRH Package Snapshot
        if: contains(github.ref, 'refs/heads/')
        run: mvn -Possrh-distribution -Drevision=${{ env.POM_VER }}-SNAPSHOT --batch-mode --no-transfer-progress -Dgpg.passphrase=${{ secrets.OSSRH_GPG_SECRET_KEY_PASSWORD }} clean deploy

      - name: Publish OSSRH Package Release
        if: "!contains(github.ref, 'refs/heads/')"
        run: mvn -Possrh-distribution --batch-mode --no-transfer-progress -Dgpg.passphrase=${{ secrets.OSSRH_GPG_SECRET_KEY_PASSWORD }} deploy